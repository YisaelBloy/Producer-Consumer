package producerConsumer;

import java.util.List;

import rx.Observable;
import rx.Subscriber;

public class TestPoc {

	
	public static void main(String[] args) {

		String source = "JsonSource.txt";
		JsonReader sourceReader = new JsonReader(source);
		List<String> eventsData = sourceReader.getEventList();
		
		Observable<String> eventsObservable = Observable.from(eventsData);
		
//		@SuppressWarnings("deprecation")
//		Observable<String> myObservable = Observable.create(new Observable.OnSubscribe<String>() {
//
//			public void call(Subscriber<? super String> subscriber) {
//				subscriber.onNext("Blue Factory");
//				subscriber.onCompleted();
//			}
//		});

		Subscriber<String> mySubscriber = new Subscriber<String>() {

			public void onNext(String text) {
				System.out.println(text);

			}

			public void onError(Throwable t) {
				System.out.println("An error occurred: " + t.getMessage());
			}

			public void onCompleted() {
				System.out.println("== Subscription has been completed ==");

			}
		};

		eventsObservable.subscribe(mySubscriber);
	}

}
