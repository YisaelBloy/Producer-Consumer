package producerConsumer;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import rx.Subscriber;

/**
 * Gathers and provides statistical information on events which are received from Observable.
 *   
 * @author Yisrael Bloygrund
 *
 */
public class StatsSubscriber extends Subscriber<String> {

	// Maps which the value is a counter for its keyword. One Map for the event_type and one for the data field.
	private Map<String, Integer> eventCounterMap = new HashMap<String, Integer>();
	private Map<String, Integer> dataCounterMap = new HashMap<String, Integer>();

	public void onNext(String text) {
		// Split each event into two words, the event_type and its data.
		String[] event = text.split(JsonReader.SEPARATOR, 2);
		updateCountMap(eventCounterMap, event[0]);
		updateCountMap(dataCounterMap, event[1]);
	}
	
	public void onError(Throwable e) {
		System.out.println("An error occurred: " + e.getMessage());
	}

	public void onCompleted() {
		// Display all statistics.
		displayStatistics();
	}
	
	/**
	 * Increment by 1 the counter (value) of the Map's key word.<br>
	 * If the key does not already exist, add it to the Map with count = 1.
	 * 
	 * @param countMap
	 * 		The counter Map.
	 * @param key
	 * 		The Map's key word.
	 */
	private void updateCountMap(Map<String, Integer> countMap, String key) {
		// If the word exists, increment the counter by 1.
		if (countMap.containsKey(key)) {
			countMap.put(key, countMap.get(key) + 1);
		// If the word does not already exist, add it to the map with count = 1.
		} else {
			countMap.put(key, 1);
		}
	}
	
	/**
	 * Display the counter (value) for each word (key) in the Map.
	 * 
	 * @param counterMap
	 * 		The counter Map.
	 * @param description
	 * 		Description of the counted word (key).
	 */
	private void displayCounter(Map<String, Integer> counterMap, String description) {
		if (counterMap.isEmpty()) {
			System.out.println("The " + description + " counter does not contain any information.");
		} else {
			System.out.println("Statistics for " + description + ":");
			for (String key : (Set<String>) counterMap.keySet()) {
				System.out.println("  The " + description + " \"" + key + "\" appears " + counterMap.get(key) + " times.");
			}
		}
	}
	
	/**
	 * Display the statistics of the "event_type" and the "data".
	 */
	protected void displayStatistics() {
		displayCounter(eventCounterMap, "event_type");
		displayCounter(dataCounterMap, "data");
	}

}
